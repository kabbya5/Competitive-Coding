class Solution {

    /**
     * @param Integer[] $nums
     * @param Integer $p
     * @return Integer
     */
    function minSubarray($nums, $p) {
        $total_sum = array_sum($nums);
    $remainder = $total_sum % $p;
    
        if ($remainder == 0) {
            return 0;
        }
        
        $prefix_mod_map = [0 => -1];
        $prefix_sum = 0;
        $min_len = count($nums);
        
        for ($i = 0; $i < count($nums); $i++) {
            $prefix_sum = ($prefix_sum + $nums[$i]) % $p;
            
            $target = ($prefix_sum - $remainder + $p) % $p;
            
            if (isset($prefix_mod_map[$target])) {
                $min_len = min($min_len, $i - $prefix_mod_map[$target]);
            }
            
            $prefix_mod_map[$prefix_sum] = $i;
        }
        
        return $min_len < count($nums) ? $min_len : -1;
    }
}
